import {
    __assign,
    __extends,
    __rest
} from "tslib";
import React from 'react';
import {
    PrintOnlyImageSource
} from './printOnlySource';
var ImageRenderer = /** @class */ (function(_super) {
    __extends(ImageRenderer, _super);

    function ImageRenderer(props) {
        var _this = _super.call(this, props) || this;
        _this.imageRef = null;
        return _this;
    }
    ImageRenderer.prototype.componentDidMount = function() {
        var _a;
        if (((_a = this.imageRef) === null || _a === void 0 ? void 0 : _a.complete) && typeof this.props.onLoad === 'function') {
            this.props.onLoad();
        }
    };
    ImageRenderer.prototype.render = function() {
        var _this = this;
        var _a = this.props,
            customImageRenderer = _a.customImageRenderer,
            imageProps = __rest(_a, ["customImageRenderer"]); // customImageRenderer is not valid for dom elements.
        if (typeof customImageRenderer === 'function') {
            return customImageRenderer(this.props);
        } else if (typeof this.props.src === 'string') {
            return (React.createElement("img", __assign({
                ref: function(ref) {
                    _this.imageRef = ref;
                },
                alt: this.props.alt
            }, imageProps)));
        } else if (typeof this.props.src === 'object') {
            return (React.createElement("picture", {
                    id: "multi_picture_" + this.props.id,
                    key: "multi_picture_" + this.props.id
                },
                this.props.src.map(function(src, index) {
                    return src.forPrinting ? (React.createElement(PrintOnlyImageSource, {
                        key: "print-only-image-" + index,
                        srcSet: src.dpr,
                        type: "image/" + src.type
                    })) : (React.createElement("source", {
                        key: "image-source-" + index,
                        srcSet: src.dpr || src.url,
                        type: "image/" + src.type
                    }));
                }),
                React.createElement("img", __assign({
                    ref: function(ref) {
                        _this.imageRef = ref;
                    },
                    alt: this.props.alt
                }, imageProps, {
                    src: this.props.src[this.props.src.length - 1].url
                }))));
        } else {
            return null;
        }
    };
    return ImageRenderer;
}(React.Component));
export default ImageRenderer;
//# sourceMappingURL=imageRenderer.js.map